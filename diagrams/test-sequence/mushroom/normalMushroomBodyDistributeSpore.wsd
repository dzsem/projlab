@startuml  Normal Mushroom Body Distribute Spores

title Normal Mushroom Body Distribute Spores

actor "Tester" as tester
participant "Skeleton" as skeleton
participant "normalBody: MushroomBody" as nmb
participant "t3: Tecton" as t3

collections "tectonsToSpore: Tecton[0..*]" as tectons

participant "t2: Tecton" as t2

collections "neighbours: Tecton[0..*]"
participant "s1: Spore"
participant "s2: Spore"

activate tester
tester -> skeleton: test_lastSpore()
activate skeleton


' BEGIN COPY
skeleton -> nmb: distributeSpores() 
activate nmb
nmb -> t3 : getNeighbours()
activate t3
t3 --> nmb : neighbours: Tecton[0..*]
deactivate t3

nmb --> tectons: Instantiate
note right: belso lista
activate tectons
deactivate tectons

nmb -> tectons: add(normalBody.tecton)
activate tectons
tectons --> nmb
deactivate tectons

nmb -> tectons: addAll(neighbours);
activate tectons
tectons --> nmb
deactivate tectons

' CANT REUSE
' loop for each tectonToSpore in tectonsToSpore
'     body -> tectonToSpore : addSpore(spore: Spore)
'     activate tectonToSpore
'     tectonToSpore --> body 
'     deactivate tectonToSpore
' 
' end


nmb -> t3: addSpore(s2: Spore)
activate t3
t3 --> nmb
deactivate t3

nmb -> t2: addSpore(s1: Spore)
activate t2
t2 --> nmb
deactivate t2

nmb --> skeleton
deactivate nmb

' END COPY

skeleton --> tester
deactivate skeleton

deactivate tester

@enduml