@startuml  Cut Connection With Two Bodies

title Thread Cut Connection With Two Bodies

actor "Tester" as tester

participant "t1: Tecton" as t1
participant "t2: Tecton" as t2
participant "t3: Tecton" as t3
participant "t4: Tecton" as t4
participant "t5: Tecton" as t5

participant "mt1: MushroomThread" as mt1
participant "mt2: MushroomThread" as mt2
participant "mt3: MushroomThread" as mt3
participant "mt4: MushroomThread" as mt4
participant "mt5: MushroomThread" as mt5

participant "mb1: MushroomBody" as mb1
participant "mb2: MushroomBody" as mb2

activate tester

'Init Tectons
tester -> t1: Initialize()
activate t1
t1 --> tester
deactivate t1

tester -> t2: Initialize()
activate t2
t2 --> tester
deactivate t2

tester -> t3: Initialize()
activate t3
t3 --> tester
deactivate t3


tester -> t4: Initialize()
activate t4
t4 --> tester
deactivate t4

tester -> t5: Initialize()
activate t5
t5 --> tester
deactivate t5

'Init MB
tester -> mb1: Initialize(t5)
activate mb1

mb1 -> t5: setBody(mb1)
activate t5
t5--> mb1
deactivate t5

mb1 --> tester
deactivate mb1


tester -> mb2: Initialize(t1)
activate mb2

mb2 -> t1: setBody(mb2)
activate t1
t1 --> mb2
deactivate t1

mb2 --> tester
deactivate mb2

'Init mt5
tester -> mt5: Initialize(t5)
activate mt5
mt5 --> tester
deactivate mt5

'Create connections mt4
tester -> mt5: createConnection(t4)
activate mt5

mt5-> mt4: Initialize(t4)
activate mt4
mt4 --> mt5
deactivate mt4 

mt5 --> tester
deactivate mt5

'Create connections mt3
tester -> mt4: createConnection(t3)
activate mt4

mt4-> mt3: Initialize(t3)
activate mt3
mt3 --> mt4
deactivate mt3 

mt4 --> tester
deactivate mt4

'Create connections mt2
tester -> mt3: createConnection(t2)
activate mt3

mt3 -> mt2: Initialize(t2)
activate mt2
mt2 --> mt3
deactivate mt2 

mt3 --> tester
deactivate mt3

'Create connections mt1
tester -> mt2: createConnection(t1)
activate mt2

mt2 -> mt1: Initialize(t1)
activate mt1
mt1 --> mt2
deactivate mt1 

mt2 --> tester
deactivate mt2

@enduml