' Test-casek:
' - Tecton Grow Thread Success: t1 és t2 szomszédos; t1-en van mt
' - Tecton Grow Thread Fail: t1 és t3 nem szomszédos; t1-en van mt
' - Tecton Grow Body Success: t1-en van mt; t1-en van s1_1, s1_2 és s1_3; t1-en nincs mb
' - Tecton Grow Body Thread Fail: t2-n nincs mt; t2-n van s1_1, s1_2 és s1_3; t2-n nincs mb
' - Tecton Grow Body Spore Fail: t3-on van mt; t3-on nincs spóra; t3-on nincs mb
' - Tecton Grow Body Body Fail: t4-en van mt; t4-en van s1_1, s1_2, s1_3; t4-en van mb

@startuml communicationTecton3

title Tecton Grow Thread Success,\nTecton Grow Thread Fail,\nTecton Grow Body Success,\nTecton Grow Body Thread Fail,\nTecton Grow Body Spore Fail,\nTecton Grow Body Body Fail

actor "Tester" as ts
' t1 szomszédos t2-vel, de t3-al nem, így több test-casere is jó lesz a diagram 
participant "t1: Tecton" as t1 
participant "t2: Tecton" as t2
participant "t3: Tecton" as t3
participant "t4: Tecton" as t4
participant "mt: MushroomThread" as mt
participant "mb: MushroomBody" as mb
participant "s1_1: Spore" as s1_1
participant "s1_2: Spore" as s1_2
participant "s1_3: Spore" as s1_3
participant "s2_1: Spore" as s2_1
participant "s2_2: Spore" as s2_2
participant "s2_3: Spore" as s2_3
participant "s3_1: Spore" as s3_1
participant "s3_2: Spore" as s3_2
participant "s3_3: Spore" as s3_3

activate ts

' ------------------------------------------
' t1: szomszédos t2-vel
ts -> t1: 1.1 -> Initialize([t2])
activate t1

t1 -> t1: 1.1.1 registerNeighbour(t2)

ts <-- t1
deactivate t1

' ------------------------------------------
' t2: szomszédos t1-el
ts -> t2: 1.2 -> Initialize([t1])
activate t2

t2 -> t2: 1.1.1 registerNeighbour(t1)

ts <-- t2
deactivate t2

' ------------------------------------------
' t3
ts -> t3: 1.3 -> Initialize()
activate t3
ts <-- t3
deactivate t3

' ------------------------------------------
' t4
ts -> t4: 1.4 -> Initialize()
activate t4
ts <-- t4
deactivate t4

' ------------------------------------------
' thread: t1, t3, t4-en nő
ts -> mt: 2.1 -> Initialize([t1, t3, t4])
activate mt

mt -> t1: 2.1.1 <- addConnection(mt)
activate t1
mt <-- t1
deactivate t1

mt -> t3: 2.1.2 <- addConnection(mt)
activate t3
mt <-- t3
deactivate t3

mt -> t4: 2.1.3 <- addConnection(mt)
activate t4
mt <-- t4
deactivate t4

ts <-- mt
deactivate mt

' ------------------------------------------
' body: t4-en nő
ts -> mb: 3.1 -> Initialize(t4)
activate mb

mb -> t4: 3.1.1 <- setBody(mb)
activate t4
mb <-- t4
deactivate t4

ts <-- mb
deactivate mb

' ------------------------------------------
' s1_1: t1-en
ts -> s1_1: 4.1 -> Initialize(t1)
activate s1_1

s1_1 -> t1: 4.1.1 <- addSpore(s1_1)
activate t1
s1_1 <-- t1
deactivate t1

ts <-- s1_1
deactivate s1_1

' ------------------------------------------
' s2_1: t2-n
ts -> s2_1: 4.1 -> Initialize(t2)
activate s2_1

s2_1 -> t2: 4.1.1 <- addSpore(s2_1)
activate t2
s2_1 <-- t2
deactivate t2

ts <-- s2_1
deactivate s2_1

' ------------------------------------------
' s3_1: t3-on
ts -> s3_1: 4.1 -> Initialize(t3)
activate s3_1

s3_1 -> t3: 4.1.1 <- addSpore(s3_1)
activate t3
s3_1 <-- t3
deactivate t3

ts <-- s3_1
deactivate s3_1

' ------------------------------------------
' s1_2: t1-en
ts -> s1_2: 4.2 -> Initialize(t1)
activate s1_2

s1_2 -> t1: 4.2.1 <- addSpore(s1_2)
activate t1
s1_2 <-- t1
deactivate t1

ts <-- s1_2
deactivate s1_2

' ------------------------------------------
' s2_2: t2-n
ts -> s2_2: 4.1 -> Initialize(t2)
activate s2_2

s2_2 -> t2: 4.1.1 <- addSpore(s2_2)
activate t2
s2_2 <-- t2
deactivate t2

ts <-- s2_2
deactivate s2_2

' ------------------------------------------
' s3_2: t3-on
ts -> s3_2: 4.1 -> Initialize(t3)
activate s3_2

s3_2 -> t3: 4.1.1 <- addSpore(s3_2)
activate t3
s3_2 <-- t3
deactivate t3

ts <-- s3_2
deactivate s3_2

' ------------------------------------------
' s1_3: t1-en
ts -> s1_3: 4.3 -> Initialize(t1)
activate s1_3

s1_3 -> t1: 4.3.1 <- addSpore(s1_3)
activate t1
s1_3 <-- t1
deactivate t1

ts <-- s1_3
deactivate s1_3

' ------------------------------------------
' s2_3: t2-n
ts -> s2_3: 4.1 -> Initialize(t2)
activate s2_3

s2_3 -> t2: 4.1.1 <- addSpore(s2_3)
activate t2
s2_3 <-- t2
deactivate t2

ts <-- s2_3
deactivate s2_3

' ------------------------------------------
' s3_3: t3-on
ts -> s3_3: 4.1 -> Initialize(t3)
activate s3_3

s3_3 -> t3: 4.1.1 <- addSpore(s3_3)
activate t3
s3_3 <-- t3
deactivate t3

ts <-- s3_3
deactivate s3_3

deactivate ts

@enduml