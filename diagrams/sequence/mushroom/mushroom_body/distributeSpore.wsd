@startuml DistributeSpore
title MushroomBody.distributeSpores

actor "Mycologist" as mycologist
participant "body: MushroomBody" as body
participant "body.tecton: Tecton" as tecton
participant "tectonToSpore: Tecton" as tectonToSpore
collections "tectonsToSpore: Tecton[0..*]" as tectons 

collections "neighbours: Tecton[0..*]"
participant "neighbourOfNeighbours"

mycologist -> body : distributeSpores()
activate mycologist
activate body

body -> tecton : getNeighbours()

activate tecton
tecton --> body : neighbours: Tecton[0..*]
deactivate tecton

body --> tectons: Instantiate
note right: belso lista
activate tectons
deactivate tectons

    
    body -> tectons: add(body.tecton)
    activate tectons
    tectons --> body
    deactivate tectons
    
    body -> tectons: addAll(neighbours);
    activate tectons
    tectons --> body
    deactivate tectons

    opt body.age >= advancedAge
        loop for each neighbourOfNeighbour in neighbours
            opt !tectonsToSpore.contains(neighbour)
                body -> tectons: tectonsToSpore.add(neighbourOfNeighbour)
                activate tectons
                tectons --> body
                deactivate tectons
            end
        end
    end

    loop for each tectonToSpore in tectonsToSpore
        body -> tectonToSpore : addSpore(spore: Spore)
        activate tectonToSpore
        tectonToSpore --> body 
        deactivate tectonToSpore

    end

    opt body.remainingSpore == 0
        body -> tecton : removeBody(body)
        activate tecton
        tecton --> body
        deactivate tecton
    end

mycologist <-- body
deactivate body
deactivate mycologist

@enduml